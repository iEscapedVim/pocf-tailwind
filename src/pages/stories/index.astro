---
import Layout from '@layouts/SinglePages.astro';
import Sidebar from '@comps/stories/sidebar.astro';
import Quotescard from '@comps/stories/quotescard.astro';
import Pagination from "@comps/pagination.astro";
import Postcard from '@comps/stories/postcard.astro';

import { getCollection } from 'astro:content';
const randomQuote = await getCollection("quotes");

import { getPosts } from '@libs/wordpress';

export async function getStaticPaths() {
  const perPage = 9;
  const posts = await getPosts(1, perPage);
  const totalPages = Math.ceil(posts.nodes.length / perPage);

  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 1).toString() },
  }));
}

const { page } = Astro.params;
const currentPage = parseInt(page);
const perPage = 9;
const posts = await getPosts(currentPage, perPage);
---
<Layout title="Stories | POCF">
    <section class="w-11/12 mx-auto grid grid-cols-12 justify-center items-start">
        <div class="col-span-12 md:col-span-9">
            <!-- Blog Posts -->
            <div class="grid grid-cols-8 gap-6 w-11/12 mx-auto">{posts.nodes.map((post: any) => <Postcard post={post} />)}</div>
            <br />
            <div class="w-11/12 mx-auto">
                <!-- Random Quote -->
                {randomQuote.sort(() => 0.5 - Math.random()).slice(0, 1).map((p: any) => <Quotescard post={p}/>)}
                <!-- Pagination -->
                <div class="flex flex-row justify-between items-center pb-20">    <Pagination
                    currentPage={currentPage}
                    hasNextPage={posts.pageInfo.hasNextPage}
                    baseUrl="/page/"
                  />
                </div> 
            </div>
        </div>
        <div class="hidden md:flex col-span-3">
            <Sidebar />
        </div>
    </section>

    <style>
        .page {
            color: #232323;
            text-decoration: underline !important;
            padding: 10px 15px;
            font-weight: bold;
            height: 30px;
            font-family: 'Lora', serif;
            -webkit-transition: all 0.4s ease-in-out;
            -moz-transition: all 0.4s ease-in-out;
            -o-transition: all 0.4s ease-in-out;
            -ms-transition: all 0.4s ease-in-out;
            transition: all 0.4s ease-in-out;
            display: flex;
            align-items: center;
        }
        .page:hover {
            text-decoration: none !important;
        }
        .active {
            background: #d52127;
            text-decoration: none !important;
        }
    </style>
</Layout>