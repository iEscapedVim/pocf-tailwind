---
import Layout from '@layouts/SinglePages.astro';
import Sidebar from '@comps/stories/sidebar.astro';
import Postcard from '@comps/stories/postcard.astro';
import Quotescard from '@comps/stories/quotescard.astro';
import Pagination from "@comps/pagination.astro";

import { getCollection } from 'astro:content';

export async function getStaticPaths({ paginate }: { paginate: (items: any[], options: { pageSize: number }) => any }) {
    const allPosts = await getCollection("stories");
    
    // Get all unique categories
    const uniqueCategories = [...new Set(allPosts.map(post => post.data.category?.toLowerCase()))];

    // Return paginated data for each category
    return uniqueCategories.flatMap(category => {
        const filteredPosts = allPosts.filter(post => 
            post.data.category?.toLowerCase() === category && 
            post.data.draft !== "true"
        );
        
        return paginate(filteredPosts, {
            params: { category },
            pageSize: 5,
        });
    });
}

const { page } = Astro.props;
const { category } = Astro.params;

// Get a random quote
const quotes = await getCollection("quotes");
const randomQuote = quotes.sort(() => 0.5 - Math.random()).slice(0, 1);
---

<Layout title={`${category.charAt(0).toUpperCase() + category.slice(1)} | POCF`}>
    <section class="w-11/12 mx-auto grid grid-cols-12 justify-center items-start">
        <div class="col-span-12 md:col-span-9">
            <!-- Blog Posts -->
            {page.data.sort((a, b) => 
                new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
            ).map((post) => 
                <Postcard post={post}/>
            )}
            <br />
            <div class="w-11/12">
                <!-- Random Quote -->
                {randomQuote.map((quote) => 
                    <Quotescard post={quote}/>
                )}
                <!-- Pagination -->
                <div class="flex flex-row justify-between items-center pb-20">
                    <Pagination prevUrl={page.url.prev} />
                        <div class="flex gap-3 lora italic">
                            {page.url.first ? <a href={page.url.first} class="page">First</a> : null}
                            <a href={page.currentPage} class="page active">
                                {page.currentPage}
                            </a>
                            {page.url.last ? <a href={page.url.last} class="page">Last</a> : null}
                        </div>
                    <Pagination nextUrl={page.url.next} />
                </div> 
            </div>
        </div>
        <div class="hidden md:flex col-span-3">
            <Sidebar />
        </div>
    </section>
</Layout>

<style>
    .page {
        color: #232323;
        text-decoration: underline !important;
        padding: 10px 15px;
        font-weight: bold;
        height: 30px;
        font-family: 'Lora', serif;
        -webkit-transition: all 0.4s ease-in-out;
        -moz-transition: all 0.4s ease-in-out;
        -o-transition: all 0.4s ease-in-out;
        -ms-transition: all 0.4s ease-in-out;
        transition: all 0.4s ease-in-out;
        display: flex;
        align-items: center;
    }
    .page:hover {
        text-decoration: none !important;
    }
    .active {
        background: #ecc731;
        text-decoration: none !important;
    }
</style>
